<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="893dd0c9-fc66-429e-864a-7107926f0932" name="Changes" comment="clean up code">
      <change beforePath="$PROJECT_DIR$/BudgetSystem/BudgetService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/BudgetSystem/BudgetService.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/BudgetSystem/BudgetServiceTest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/BudgetSystem/BudgetServiceTest.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/BudgetSystem/Period.cs" beforeDir="false" afterPath="$PROJECT_DIR$/BudgetSystem/Period.cs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$/.." value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="mock://C:/Users/joey_/RiderProjects/202111-tdd/TDD_BudgetService-refactor/BudgetSystem/BudgetSystem/BudgetService.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Users/joey_/RiderProjects/202111-tdd/TDD_BudgetService-refactor/BudgetSystem/BudgetSystem/BudgetService.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Users/joey_/RiderProjects/202111-tdd/TDD_BudgetService-refactor/BudgetSystem/BudgetSystem/BudgetService.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Users/joey_/RiderProjects/202111-tdd/TDD_BudgetService-refactor/BudgetSystem/BudgetSystem/BudgetService.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Users/joey_/RiderProjects/202111-tdd/TDD_BudgetService-refactor/BudgetSystem/BudgetSystem/BudgetService.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Users/joey_/RiderProjects/202111-tdd/TDD_BudgetService-refactor/BudgetSystem/BudgetSystem/BudgetService.cs" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="ProjectId" id="20r98hlIamgfQTwgUzRxUnhHonE" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="foldersAlwaysOnTop" value="false" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="preferences.lookFeel" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="893dd0c9-fc66-429e-864a-7107926f0932" name="Changes" comment="" />
      <created>1636791683550</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1636791683550</updated>
      <workItem from="1636791689637" duration="4506000" />
    </task>
    <task id="LOCAL-00012" summary="[refactor] use currentMonth when start budget">
      <created>1636811492534</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1636811492534</updated>
    </task>
    <task id="LOCAL-00013" summary="[refactor] use currentMonth when end budget">
      <created>1636811514548</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1636811514548</updated>
    </task>
    <task id="LOCAL-00014" summary="[refactor] rename variable: overlappingDays">
      <created>1636811863626</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1636811863626</updated>
    </task>
    <task id="LOCAL-00015" summary="[refactor] use GetAmountForOneDay() when middle months">
      <created>1636811914900</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1636811914900</updated>
    </task>
    <task id="LOCAL-00016" summary="[refactor] remove duplication by move out of if/else blocks">
      <created>1636811961730</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1636811961730</updated>
    </task>
    <task id="LOCAL-00017" summary="[refactor] rename variable by overlapping domain">
      <created>1636812018198</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1636812018198</updated>
    </task>
    <task id="LOCAL-00018" summary="[refactor] rename variable by overlapping domain when end month">
      <created>1636812066273</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1636812066273</updated>
    </task>
    <task id="LOCAL-00019" summary="[refactor] use overlapping logic when middle months">
      <created>1636812161882</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1636812161882</updated>
    </task>
    <task id="LOCAL-00020" summary="[refactor] remove duplication code by move out of if/else blocks">
      <created>1636812226189</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1636812226189</updated>
    </task>
    <task id="LOCAL-00021" summary="[refactor] use the same logic of overlappingEnd when start and middle months">
      <created>1636812300285</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1636812300285</updated>
    </task>
    <task id="LOCAL-00022" summary="[refactor] introduce parameter: budget of GetAmountForOneDay() and remove unused parameter: budgets">
      <created>1636812494603</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1636812494603</updated>
    </task>
    <task id="LOCAL-00023" summary="[refactor] introduce variable: budget">
      <created>1636812529896</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1636812529896</updated>
    </task>
    <task id="LOCAL-00024" summary="[refactor]move budget declaration at beginning of while loop">
      <created>1636812575418</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1636812575418</updated>
    </task>
    <task id="LOCAL-00025" summary="[refactor] add budget is null should continue while loop">
      <created>1636812626754</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1636812626754</updated>
    </task>
    <task id="LOCAL-00026" summary="[refactor] use budget.YearMonth for check start budget, instead of currentMonth">
      <created>1636812665116</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1636812665116</updated>
    </task>
    <task id="LOCAL-00027" summary="[refactor] use budget.YearMonth for checking end budget, instead of currentMonth">
      <created>1636812698813</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1636812698813</updated>
    </task>
    <task id="LOCAL-00028" summary="[refactor] use budget.FirstDay() as overlappingStart when middle month">
      <created>1636812797051</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1636812797052</updated>
    </task>
    <task id="LOCAL-00029" summary="[refactor] use budget.LastDay() as overlappingEnd when middle months">
      <created>1636812944586</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1636812944586</updated>
    </task>
    <task id="LOCAL-00030" summary="[refactor] use budget.LastDay() as overlappingEnd when start budget, and use budget.FirstDay(0 as overlappingStart when end budget">
      <created>1636812999068</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1636812999068</updated>
    </task>
    <task id="LOCAL-00031" summary="[refactor]extract method: OverlappingDays()">
      <created>1636813025377</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1636813025377</updated>
    </task>
    <task id="LOCAL-00032" summary="[refactor] transform parameter object: Period from start and end">
      <created>1636813121556</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1636813121556</updated>
    </task>
    <task id="LOCAL-00033" summary="[refactor] move OverlappingDays() to Period class to remove smell of &quot;feature envy&quot;">
      <created>1636813157094</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1636813157094</updated>
    </task>
    <task id="LOCAL-00034" summary="clean up code">
      <created>1636813192166</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1636813192166</updated>
    </task>
    <task id="LOCAL-00035" summary="[refactor] use overlapping domain for overlappingStart">
      <created>1636813258232</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1636813258232</updated>
    </task>
    <task id="LOCAL-00036" summary="[refactor] use overlapping domain for overlappingEnd">
      <created>1636813299418</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1636813299418</updated>
    </task>
    <task id="LOCAL-00037" summary="clean up code">
      <created>1636813318923</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1636813318923</updated>
    </task>
    <task id="LOCAL-00038" summary="[refactor] introduce temp variables: firstDay and lastDay">
      <created>1636813353817</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1636813353817</updated>
    </task>
    <task id="LOCAL-00039" summary="[refactor] create a variable: another Period from budget.firstDay() and budget.LastDay()">
      <created>1636813389725</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1636813389725</updated>
    </task>
    <task id="LOCAL-00040" summary="[refactor] use another for firstDay and lastDay, instead of budget">
      <created>1636813423546</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1636813423546</updated>
    </task>
    <task id="LOCAL-00041" summary="[refactor] inline temp variables">
      <created>1636813434511</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1636813434511</updated>
    </task>
    <task id="LOCAL-00042" summary="[refactor] introduce parameter: another Period of OverlappingDays() and remove unused parameter: budget">
      <created>1636813475915</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1636813475915</updated>
    </task>
    <task id="LOCAL-00043" summary="[refactor] extract method: CreatePeriod()">
      <created>1636813497341</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1636813497341</updated>
    </task>
    <task id="LOCAL-00044" summary="[refactor] move method CreatePeriod() to Budget class to remove smell: &quot;feature envy&quot;">
      <created>1636813529439</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1636813529439</updated>
    </task>
    <task id="LOCAL-00045" summary="[refactor] inline method">
      <created>1636813576703</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1636813576703</updated>
    </task>
    <task id="LOCAL-00046" summary="[refactor] replace with false and remove unreachable code">
      <created>1636813600956</created>
      <option name="number" value="00046" />
      <option name="presentableId" value="LOCAL-00046" />
      <option name="project" value="LOCAL" />
      <updated>1636813600956</updated>
    </task>
    <task id="LOCAL-00047" summary="[refactor] introduce variable: daysInMonth">
      <created>1636813630859</created>
      <option name="number" value="00047" />
      <option name="presentableId" value="LOCAL-00047" />
      <option name="project" value="LOCAL" />
      <updated>1636813630859</updated>
    </task>
    <task id="LOCAL-00048" summary="[refactor] use budget.Days() behavior">
      <created>1636813717918</created>
      <option name="number" value="00048" />
      <option name="presentableId" value="LOCAL-00048" />
      <option name="project" value="LOCAL" />
      <updated>1636813717918</updated>
    </task>
    <task id="LOCAL-00049" summary="[refactor] inline variable">
      <created>1636813732660</created>
      <option name="number" value="00049" />
      <option name="presentableId" value="LOCAL-00049" />
      <option name="project" value="LOCAL" />
      <updated>1636813732660</updated>
    </task>
    <task id="LOCAL-00050" summary="[refactor] extract method DailyAmount() and change return type as decimal">
      <created>1636813796959</created>
      <option name="number" value="00050" />
      <option name="presentableId" value="LOCAL-00050" />
      <option name="project" value="LOCAL" />
      <updated>1636813796959</updated>
    </task>
    <task id="LOCAL-00051" summary="[refactor] move method DailyAmount() to Budget class">
      <created>1636813828134</created>
      <option name="number" value="00051" />
      <option name="presentableId" value="LOCAL-00051" />
      <option name="project" value="LOCAL" />
      <updated>1636813828134</updated>
    </task>
    <task id="LOCAL-00052" summary="[refactor] introduce variable: period, and move out of scope of while loop">
      <created>1636813864777</created>
      <option name="number" value="00052" />
      <option name="presentableId" value="LOCAL-00052" />
      <option name="project" value="LOCAL" />
      <updated>1636813864777</updated>
    </task>
    <task id="LOCAL-00053" summary="[refactor] extract method OverlappingAmount()">
      <created>1636813899382</created>
      <option name="number" value="00053" />
      <option name="presentableId" value="LOCAL-00053" />
      <option name="project" value="LOCAL" />
      <updated>1636813899382</updated>
    </task>
    <task id="LOCAL-00054" summary="[refactor] move method: OverlappingAmount() to Budget class">
      <created>1636813928475</created>
      <option name="number" value="00054" />
      <option name="presentableId" value="LOCAL-00054" />
      <option name="project" value="LOCAL" />
      <updated>1636813928475</updated>
    </task>
    <task id="LOCAL-00055" summary="[refactor] iterate budgets, instead of while loop of currentMonth">
      <created>1636813985926</created>
      <option name="number" value="00055" />
      <option name="presentableId" value="LOCAL-00055" />
      <option name="project" value="LOCAL" />
      <updated>1636813985926</updated>
    </task>
    <task id="LOCAL-00056" summary="clean up code">
      <created>1636814005978</created>
      <option name="number" value="00056" />
      <option name="presentableId" value="LOCAL-00056" />
      <option name="project" value="LOCAL" />
      <updated>1636814005978</updated>
    </task>
    <task id="LOCAL-00057" summary="[refactor] convert foreach to Sum()">
      <created>1636814043069</created>
      <option name="number" value="00057" />
      <option name="presentableId" value="LOCAL-00057" />
      <option name="project" value="LOCAL" />
      <updated>1636814043069</updated>
    </task>
    <task id="LOCAL-00058" summary="[refactor] use guard statement to return directly">
      <created>1636814080487</created>
      <option name="number" value="00058" />
      <option name="presentableId" value="LOCAL-00058" />
      <option name="project" value="LOCAL" />
      <updated>1636814080487</updated>
    </task>
    <task id="LOCAL-00059" summary="[refactor] use budget.OverlappingAmount() for all budgets, and add no overlapping check of OverlappingDays()">
      <created>1636814152609</created>
      <option name="number" value="00059" />
      <option name="presentableId" value="LOCAL-00059" />
      <option name="project" value="LOCAL" />
      <updated>1636814152609</updated>
    </task>
    <task id="LOCAL-00060" summary="clean up code">
      <created>1636814173667</created>
      <option name="number" value="00060" />
      <option name="presentableId" value="LOCAL-00060" />
      <option name="project" value="LOCAL" />
      <updated>1636814173667</updated>
    </task>
    <option name="localTasksCounter" value="61" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="UnityProjectConfiguration" hasMinimizedUI="null" />
  <component name="UnityUnitTestConfiguration" currentTestLauncher="NUnit" />
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="practice" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="[refactor] move OverlappingDays() to Period class to remove smell of &quot;feature envy&quot;" />
    <MESSAGE value="[refactor] use overlapping domain for overlappingStart" />
    <MESSAGE value="[refactor] use overlapping domain for overlappingEnd" />
    <MESSAGE value="[refactor] introduce temp variables: firstDay and lastDay" />
    <MESSAGE value="[refactor] create a variable: another Period from budget.firstDay() and budget.LastDay()" />
    <MESSAGE value="[refactor] use another for firstDay and lastDay, instead of budget" />
    <MESSAGE value="[refactor] inline temp variables" />
    <MESSAGE value="[refactor] introduce parameter: another Period of OverlappingDays() and remove unused parameter: budget" />
    <MESSAGE value="[refactor] extract method: CreatePeriod()" />
    <MESSAGE value="[refactor] move method CreatePeriod() to Budget class to remove smell: &quot;feature envy&quot;" />
    <MESSAGE value="[refactor] inline method" />
    <MESSAGE value="[refactor] replace with false and remove unreachable code" />
    <MESSAGE value="[refactor] introduce variable: daysInMonth" />
    <MESSAGE value="[refactor] use budget.Days() behavior" />
    <MESSAGE value="[refactor] inline variable" />
    <MESSAGE value="[refactor] extract method DailyAmount() and change return type as decimal" />
    <MESSAGE value="[refactor] move method DailyAmount() to Budget class" />
    <MESSAGE value="[refactor] introduce variable: period, and move out of scope of while loop" />
    <MESSAGE value="[refactor] extract method OverlappingAmount()" />
    <MESSAGE value="[refactor] move method: OverlappingAmount() to Budget class" />
    <MESSAGE value="[refactor] iterate budgets, instead of while loop of currentMonth" />
    <MESSAGE value="[refactor] convert foreach to Sum()" />
    <MESSAGE value="[refactor] use guard statement to return directly" />
    <MESSAGE value="[refactor] use budget.OverlappingAmount() for all budgets, and add no overlapping check of OverlappingDays()" />
    <MESSAGE value="clean up code" />
    <option name="LAST_COMMIT_MESSAGE" value="clean up code" />
  </component>
</project>